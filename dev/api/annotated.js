var annotated =
[
    [ "AST", "namespace_a_s_t.html", "namespace_a_s_t" ],
    [ "fablexer", null, [
      [ "lexer", null, [
        [ "FabLexer", "classfablexer_1_1lexer_1_1_fab_lexer.html", null ]
      ] ]
    ] ],
    [ "fabrique", null, [
      [ "ast", null, [
        [ "Action", "classfabrique_1_1ast_1_1_action.html", "classfabrique_1_1ast_1_1_action" ],
        [ "Argument", "classfabrique_1_1ast_1_1_argument.html", "classfabrique_1_1ast_1_1_argument" ],
        [ "ASTDump", "classfabrique_1_1ast_1_1_a_s_t_dump.html", null ],
        [ "BinaryOperation", "classfabrique_1_1ast_1_1_binary_operation.html", "classfabrique_1_1ast_1_1_binary_operation" ],
        [ "BoolLiteral", "classfabrique_1_1ast_1_1_bool_literal.html", "classfabrique_1_1ast_1_1_bool_literal" ],
        [ "Call", "classfabrique_1_1ast_1_1_call.html", "classfabrique_1_1ast_1_1_call" ],
        [ "CompoundExpression", "classfabrique_1_1ast_1_1_compound_expression.html", "classfabrique_1_1ast_1_1_compound_expression" ],
        [ "Conditional", "classfabrique_1_1ast_1_1_conditional.html", "classfabrique_1_1ast_1_1_conditional" ],
        [ "DebugTracePoint", "classfabrique_1_1ast_1_1_debug_trace_point.html", "classfabrique_1_1ast_1_1_debug_trace_point" ],
        [ "EvalContext", "classfabrique_1_1ast_1_1_eval_context.html", "classfabrique_1_1ast_1_1_eval_context" ],
        [ "Expression", "classfabrique_1_1ast_1_1_expression.html", "classfabrique_1_1ast_1_1_expression" ],
        [ "FieldAccess", "classfabrique_1_1ast_1_1_field_access.html", "classfabrique_1_1ast_1_1_field_access" ],
        [ "FieldQuery", "classfabrique_1_1ast_1_1_field_query.html", "classfabrique_1_1ast_1_1_field_query" ],
        [ "FileList", "classfabrique_1_1ast_1_1_file_list.html", "classfabrique_1_1ast_1_1_file_list" ],
        [ "Filename", "classfabrique_1_1ast_1_1_filename.html", "classfabrique_1_1ast_1_1_filename" ],
        [ "ForeachExpr", "classfabrique_1_1ast_1_1_foreach_expr.html", "classfabrique_1_1ast_1_1_foreach_expr" ],
        [ "Function", "classfabrique_1_1ast_1_1_function.html", "classfabrique_1_1ast_1_1_function" ],
        [ "HasParameters", "classfabrique_1_1ast_1_1_has_parameters.html", "classfabrique_1_1ast_1_1_has_parameters" ],
        [ "HasScope", "classfabrique_1_1ast_1_1_has_scope.html", "classfabrique_1_1ast_1_1_has_scope" ],
        [ "Identifier", "classfabrique_1_1ast_1_1_identifier.html", "classfabrique_1_1ast_1_1_identifier" ],
        [ "Import", "classfabrique_1_1ast_1_1_import.html", "classfabrique_1_1ast_1_1_import" ],
        [ "IntLiteral", "classfabrique_1_1ast_1_1_int_literal.html", "classfabrique_1_1ast_1_1_int_literal" ],
        [ "List", "classfabrique_1_1ast_1_1_list.html", "classfabrique_1_1ast_1_1_list" ],
        [ "Literal", "classfabrique_1_1ast_1_1_literal.html", "classfabrique_1_1ast_1_1_literal" ],
        [ "Mapping", "classfabrique_1_1ast_1_1_mapping.html", "classfabrique_1_1ast_1_1_mapping" ],
        [ "Node", "classfabrique_1_1ast_1_1_node.html", "classfabrique_1_1ast_1_1_node" ],
        [ "Parameter", "classfabrique_1_1ast_1_1_parameter.html", "classfabrique_1_1ast_1_1_parameter" ],
        [ "Parser", "classfabrique_1_1ast_1_1_parser.html", "classfabrique_1_1ast_1_1_parser" ],
        [ "Scope", "classfabrique_1_1ast_1_1_scope.html", "classfabrique_1_1ast_1_1_scope" ],
        [ "SomeValue", "classfabrique_1_1ast_1_1_some_value.html", "classfabrique_1_1ast_1_1_some_value" ],
        [ "StringLiteral", "classfabrique_1_1ast_1_1_string_literal.html", "classfabrique_1_1ast_1_1_string_literal" ],
        [ "StructInstantiation", "classfabrique_1_1ast_1_1_struct_instantiation.html", "classfabrique_1_1ast_1_1_struct_instantiation" ],
        [ "SymbolReference", "classfabrique_1_1ast_1_1_symbol_reference.html", "classfabrique_1_1ast_1_1_symbol_reference" ],
        [ "UnaryOperation", "classfabrique_1_1ast_1_1_unary_operation.html", "classfabrique_1_1ast_1_1_unary_operation" ],
        [ "Value", "classfabrique_1_1ast_1_1_value.html", "classfabrique_1_1ast_1_1_value" ],
        [ "Visitable", "classfabrique_1_1ast_1_1_visitable.html", "classfabrique_1_1ast_1_1_visitable" ],
        [ "Visitor", "classfabrique_1_1ast_1_1_visitor.html", "classfabrique_1_1ast_1_1_visitor" ]
      ] ],
      [ "backend", null, [
        [ "Backend", "classfabrique_1_1backend_1_1_backend.html", "classfabrique_1_1backend_1_1_backend" ],
        [ "DotBackend", "classfabrique_1_1backend_1_1_dot_backend.html", "classfabrique_1_1backend_1_1_dot_backend" ],
        [ "MakeBackend", "classfabrique_1_1backend_1_1_make_backend.html", "classfabrique_1_1backend_1_1_make_backend" ],
        [ "NinjaBackend", "classfabrique_1_1backend_1_1_ninja_backend.html", "classfabrique_1_1backend_1_1_ninja_backend" ],
        [ "NullBackend", "classfabrique_1_1backend_1_1_null_backend.html", "classfabrique_1_1backend_1_1_null_backend" ]
      ] ],
      [ "dag", null, [
        [ "Boolean", "classfabrique_1_1dag_1_1_boolean.html", "classfabrique_1_1dag_1_1_boolean" ],
        [ "Build", "classfabrique_1_1dag_1_1_build.html", "classfabrique_1_1dag_1_1_build" ],
        [ "Callable", "classfabrique_1_1dag_1_1_callable.html", "classfabrique_1_1dag_1_1_callable" ],
        [ "DAG", "classfabrique_1_1dag_1_1_d_a_g.html", "classfabrique_1_1dag_1_1_d_a_g" ],
        [ "DAGBuilder", "classfabrique_1_1dag_1_1_d_a_g_builder.html", "classfabrique_1_1dag_1_1_d_a_g_builder" ],
        [ "File", "classfabrique_1_1dag_1_1_file.html", "classfabrique_1_1dag_1_1_file" ],
        [ "Formatter", "classfabrique_1_1dag_1_1_formatter.html", "classfabrique_1_1dag_1_1_formatter" ],
        [ "Function", "classfabrique_1_1dag_1_1_function.html", "classfabrique_1_1dag_1_1_function" ],
        [ "Integer", "classfabrique_1_1dag_1_1_integer.html", "classfabrique_1_1dag_1_1_integer" ],
        [ "List", "classfabrique_1_1dag_1_1_list.html", "classfabrique_1_1dag_1_1_list" ],
        [ "Parameter", "classfabrique_1_1dag_1_1_parameter.html", "classfabrique_1_1dag_1_1_parameter" ],
        [ "Primitive", "classfabrique_1_1dag_1_1_primitive.html", "classfabrique_1_1dag_1_1_primitive" ],
        [ "Rule", "classfabrique_1_1dag_1_1_rule.html", "classfabrique_1_1dag_1_1_rule" ],
        [ "String", "classfabrique_1_1dag_1_1_string.html", "classfabrique_1_1dag_1_1_string" ],
        [ "Structure", "classfabrique_1_1dag_1_1_structure.html", "classfabrique_1_1dag_1_1_structure" ],
        [ "Target", "classfabrique_1_1dag_1_1_target.html", "classfabrique_1_1dag_1_1_target" ],
        [ "UndefinedValueException", "classfabrique_1_1dag_1_1_undefined_value_exception.html", "classfabrique_1_1dag_1_1_undefined_value_exception" ],
        [ "Value", "classfabrique_1_1dag_1_1_value.html", "classfabrique_1_1dag_1_1_value" ],
        [ "Visitor", "classfabrique_1_1dag_1_1_visitor.html", "classfabrique_1_1dag_1_1_visitor" ]
      ] ],
      [ "plugin", null, [
        [ "Loader", "classfabrique_1_1plugin_1_1_loader.html", "classfabrique_1_1plugin_1_1_loader" ],
        [ "Plugin", "classfabrique_1_1plugin_1_1_plugin.html", "classfabrique_1_1plugin_1_1_plugin" ],
        [ "Registry", "classfabrique_1_1plugin_1_1_registry.html", "classfabrique_1_1plugin_1_1_registry" ]
      ] ],
      [ "Arguments", "classfabrique_1_1_arguments.html", "classfabrique_1_1_arguments" ],
      [ "AssertionFailure", "classfabrique_1_1_assertion_failure.html", "classfabrique_1_1_assertion_failure" ],
      [ "BooleanType", "classfabrique_1_1_boolean_type.html", "classfabrique_1_1_boolean_type" ],
      [ "Bytestream", "classfabrique_1_1_bytestream.html", "classfabrique_1_1_bytestream" ],
      [ "ErrorReport", "classfabrique_1_1_error_report.html", "classfabrique_1_1_error_report" ],
      [ "FileType", "classfabrique_1_1_file_type.html", "classfabrique_1_1_file_type" ],
      [ "FunctionType", "classfabrique_1_1_function_type.html", "classfabrique_1_1_function_type" ],
      [ "HasSource", "classfabrique_1_1_has_source.html", "classfabrique_1_1_has_source" ],
      [ "IntegerType", "classfabrique_1_1_integer_type.html", "classfabrique_1_1_integer_type" ],
      [ "Join", "classfabrique_1_1_join.html", "classfabrique_1_1_join" ],
      [ "Lexer", "classfabrique_1_1_lexer.html", "classfabrique_1_1_lexer" ],
      [ "MaybeType", "classfabrique_1_1_maybe_type.html", "classfabrique_1_1_maybe_type" ],
      [ "OptionallyTyped", "classfabrique_1_1_optionally_typed.html", "classfabrique_1_1_optionally_typed" ],
      [ "OSError", "classfabrique_1_1_o_s_error.html", "classfabrique_1_1_o_s_error" ],
      [ "PosixError", "classfabrique_1_1_posix_error.html", "classfabrique_1_1_posix_error" ],
      [ "PosixSharedLibrary", "classfabrique_1_1_posix_shared_library.html", "classfabrique_1_1_posix_shared_library" ],
      [ "Printable", "classfabrique_1_1_printable.html", "classfabrique_1_1_printable" ],
      [ "RawMaybeType", "classfabrique_1_1_raw_maybe_type.html", "classfabrique_1_1_raw_maybe_type" ],
      [ "RawSequenceType", "classfabrique_1_1_raw_sequence_type.html", "classfabrique_1_1_raw_sequence_type" ],
      [ "SemanticException", "classfabrique_1_1_semantic_exception.html", "classfabrique_1_1_semantic_exception" ],
      [ "SequenceType", "classfabrique_1_1_sequence_type.html", "classfabrique_1_1_sequence_type" ],
      [ "SharedLibrary", "classfabrique_1_1_shared_library.html", "classfabrique_1_1_shared_library" ],
      [ "SourceCodeException", "classfabrique_1_1_source_code_exception.html", "classfabrique_1_1_source_code_exception" ],
      [ "SourceLocation", "classfabrique_1_1_source_location.html", "classfabrique_1_1_source_location" ],
      [ "SourceRange", "classfabrique_1_1_source_range.html", "classfabrique_1_1_source_range" ],
      [ "StringType", "classfabrique_1_1_string_type.html", "classfabrique_1_1_string_type" ],
      [ "StructureType", "classfabrique_1_1_structure_type.html", "classfabrique_1_1_structure_type" ],
      [ "SyntaxError", "classfabrique_1_1_syntax_error.html", "classfabrique_1_1_syntax_error" ],
      [ "Token", "classfabrique_1_1_token.html", "classfabrique_1_1_token" ],
      [ "Type", "classfabrique_1_1_type.html", "classfabrique_1_1_type" ],
      [ "TypeContext", "classfabrique_1_1_type_context.html", "classfabrique_1_1_type_context" ],
      [ "Typed", "classfabrique_1_1_typed.html", "classfabrique_1_1_typed" ],
      [ "TypeError", "classfabrique_1_1_type_error.html", "classfabrique_1_1_type_error" ],
      [ "Uncopyable", "classfabrique_1_1_uncopyable.html", "classfabrique_1_1_uncopyable" ],
      [ "UserError", "classfabrique_1_1_user_error.html", "classfabrique_1_1_user_error" ],
      [ "WrongTypeException", "classfabrique_1_1_wrong_type_exception.html", "classfabrique_1_1_wrong_type_exception" ]
    ] ],
    [ "option", "namespaceoption.html", "namespaceoption" ],
    [ "Parser", null, [
      [ "CalculatorGrammar", "struct_parser_1_1_calculator_grammar.html", "struct_parser_1_1_calculator_grammar" ],
      [ "CalculatorParser", "class_parser_1_1_calculator_parser.html", "class_parser_1_1_calculator_parser" ]
    ] ],
    [ "pegmatite", null, [
      [ "AsciiFileInput", "structpegmatite_1_1_ascii_file_input.html", "structpegmatite_1_1_ascii_file_input" ],
      [ "ASTContainer", "classpegmatite_1_1_a_s_t_container.html", "classpegmatite_1_1_a_s_t_container" ],
      [ "ASTList", "singletonpegmatite_1_1_a_s_t_list.html", "singletonpegmatite_1_1_a_s_t_list" ],
      [ "ASTMember", "classpegmatite_1_1_a_s_t_member.html", "classpegmatite_1_1_a_s_t_member" ],
      [ "ASTNode", "classpegmatite_1_1_a_s_t_node.html", "classpegmatite_1_1_a_s_t_node" ],
      [ "ASTParserDelegate", "classpegmatite_1_1_a_s_t_parser_delegate.html", "classpegmatite_1_1_a_s_t_parser_delegate" ],
      [ "ASTPtr", "singletonpegmatite_1_1_a_s_t_ptr.html", "singletonpegmatite_1_1_a_s_t_ptr" ],
      [ "BindAST", "singletonpegmatite_1_1_bind_a_s_t.html", "singletonpegmatite_1_1_bind_a_s_t" ],
      [ "CharacterExpr", "classpegmatite_1_1_character_expr.html", "classpegmatite_1_1_character_expr" ],
      [ "Context", "classpegmatite_1_1_context.html", "classpegmatite_1_1_context" ],
      [ "Error", "classpegmatite_1_1_error.html", "classpegmatite_1_1_error" ],
      [ "Expr", "classpegmatite_1_1_expr.html", "classpegmatite_1_1_expr" ],
      [ "ExprPtr", "structpegmatite_1_1_expr_ptr.html", "structpegmatite_1_1_expr_ptr" ],
      [ "Input", "classpegmatite_1_1_input.html", "classpegmatite_1_1_input" ],
      [ "InputRange", "classpegmatite_1_1_input_range.html", "classpegmatite_1_1_input_range" ],
      [ "ParserDelegate", "structpegmatite_1_1_parser_delegate.html", "structpegmatite_1_1_parser_delegate" ],
      [ "ParserPosition", "structpegmatite_1_1_parser_position.html", "structpegmatite_1_1_parser_position" ],
      [ "Rule", "classpegmatite_1_1_rule.html", "classpegmatite_1_1_rule" ],
      [ "StringInput", "classpegmatite_1_1_string_input.html", "classpegmatite_1_1_string_input" ],
      [ "UnicodeVectorInput", "classpegmatite_1_1_unicode_vector_input.html", "classpegmatite_1_1_unicode_vector_input" ]
    ] ],
    [ "DebugState", "class_debug_state.html", "class_debug_state" ],
    [ "DotFormatter", "class_dot_formatter.html", "class_dot_formatter" ],
    [ "NinjaFormatter", "class_ninja_formatter.html", "class_ninja_formatter" ],
    [ "yy_buffer_state", "structyy__buffer__state.html", "structyy__buffer__state" ],
    [ "yy_trans_info", "structyy__trans__info.html", "structyy__trans__info" ],
    [ "YYSTACKDATA", "struct_y_y_s_t_a_c_k_d_a_t_a.html", "struct_y_y_s_t_a_c_k_d_a_t_a" ],
    [ "YYSTYPE", "union_y_y_s_t_y_p_e.html", "union_y_y_s_t_y_p_e" ]
];